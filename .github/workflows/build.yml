name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run tests
        run: go test -v ./...

      - name: Run vet
        run: go vet ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        include:
          - name: linux-amd64
            os: linux
            arch: amd64
            goos: linux
            goarch: amd64
          - name: linux-arm64
            os: linux
            arch: arm64
            goos: linux
            goarch: arm64
          - name: linux-armv7
            os: linux
            arch: armv7
            goos: linux
            goarch: arm
            goarm: 7
          - name: darwin-amd64
            os: darwin
            arch: amd64
            goos: darwin
            goarch: amd64
          - name: darwin-arm64
            os: darwin
            arch: arm64
            goos: darwin
            goarch: arm64
          - name: windows-amd64
            os: windows
            arch: amd64
            goos: windows
            goarch: amd64
          - name: windows-arm64
            os: windows
            arch: arm64
            goos: windows
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Get dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}
        run: |
          BINARY_NAME="smtp-relay"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="smtp-relay.exe"
          fi
          
          go build -ldflags "-s -w -X main.Version=${{ github.ref_name }} -X main.BuildTime=$(date -u '+%Y-%m-%d_%H:%M:%S') -X main.License=MIT" \
            -o "dist/smtp-relay-${{ matrix.goos }}-${{ matrix.arch }}/$BINARY_NAME" \
            cmd/smtp-relay/main.go

      - name: Create archive
        run: |
          cd dist
          if [ "${{ matrix.goos }}" = "windows" ]; then
            7z a "smtp-relay-${{ matrix.goos }}-${{ matrix.arch }}.zip" "smtp-relay-${{ matrix.goos }}-${{ matrix.arch }}/"
          else
            tar -czf "smtp-relay-${{ matrix.goos }}-${{ matrix.arch }}.tar.gz" "smtp-relay-${{ matrix.goos }}-${{ matrix.arch }}/"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: smtp-relay-${{ matrix.goos }}-${{ matrix.arch }}
          path: dist/smtp-relay-${{ matrix.goos }}-${{ matrix.arch }}.*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 