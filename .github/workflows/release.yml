name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            artifact_name: smtp-relay-linux-amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            artifact_name: smtp-relay-linux-arm64
          - os: ubuntu-latest
            goos: linux
            goarch: armv7
            artifact_name: smtp-relay-linux-armv7

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install UPX
      run: |
        wget -qO- https://github.com/upx/upx/releases/download/v4.2.1/upx-4.2.1-amd64_linux.tar.xz | tar -xJ
        sudo mv upx-4.2.1-amd64_linux/upx /usr/local/bin/
        upx --version

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        go build -o ${{ matrix.artifact_name }} ./cmd/smtp-relay

    - name: Compress with UPX
      run: |
        upx --best --lzma ${{ matrix.artifact_name }}
        echo "Original size: $(stat -c%s ${{ matrix.artifact_name }}.upx 2>/dev/null || echo 'N/A')"
        echo "Compressed size: $(stat -c%s ${{ matrix.artifact_name }})"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          smtp-relay-linux-amd64
          smtp-relay-linux-arm64
          smtp-relay-linux-armv7
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 